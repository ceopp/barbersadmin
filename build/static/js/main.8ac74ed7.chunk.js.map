{"version":3,"sources":["pages/NotFound.jsx","components/common/Button.jsx","components/common/ValidationErrorMessage.jsx","components/common/Input.jsx","components/common/ServerError.jsx","utils/auth.js","utils/request.js","urls.js","components/common/Message.jsx","components/common/Modal.jsx","components/common/BaseContext.jsx","hooks/message.js","hooks/request.js","utils/number.js","utils/validators.js","components/LayoutAuth.jsx","hooks/queryString.js","pages/Login.jsx","pages/Auth.jsx","hooks/modal.js","components/Layout.jsx","components/common/Loader.jsx","components/common/Pagination.jsx","components/common/Table.jsx","utils/date.js","components/BarbersDetail.jsx","components/BarbersItem.jsx","pages/Barbers.jsx","components/ServicesDetail.jsx","components/ServicesItem.jsx","pages/Services.jsx","Router.jsx","index.js","static/logo.jpg","static/not_found.svg"],"names":["NotFound","className","css","styles","body","src","notFound","alt","image","string","StyleSheet","create","height","textAlign","margin","width","fontSize","Button","text","onClick","loading","icon","type","rest","cn","name","marginRight","ValidationErrorMessage","attributes","render","msg","Input","br","label","validate","imgSrc","component","optional","help","useFormikContext","errors","touched","htmlFor","id","ErrorItem","field","error","ServerError","data","key","message","auth","headers","Authorization","localStorage","token","signin","history","user","userPermissions","permissions","setItem","JSON","stringify","push","signOut","removeItem","undefined","baseAxios","axios","baseURL","transformResponse","defaults","humps","camelizeKeys","transformRequest","object","File","FormData","formData","entries","value","append","decamelize","Object","keys","reduce","acc","next","interceptors","request","use","config","params","decamelizeKeys","Message","closeMessage","delay","useState","hiding","setHiding","useEffect","hidingTimeout","setTimeout","hideTimeout","clearTimeout","hide","position","top","minWidth","right","animationName","from","opacity","to","animationDuration","zIndex","Modal","isActive","children","onClose","handleKeyboard","event","keyCode","window","addEventListener","removeEventListener","createPortal","document","querySelector","Context","createContext","BaseContextWrapper","setText","setClassName","modalComponent","setModalComponent","Provider","useMessage","useContext","usePostRequest","options","useRequest","method","useGetRequest","response","setResponse","setLoading","setError","showMessage","useHistory","a","overrideOptions","sync","success","status","logout","integersOnly","replace","required","length","validator","validators","fn","LayoutAuth","sidebar","noPadding","formWrapper","container","padding","roundedButtons","borderRadius","input","color","isPrimary","backgroundColor","forgotPassword","developmentSidebar","background","stagingSidebar","maxWidth","useQueryParams","location","useLocation","useMemo","queryString","parse","search","Login","login","url","phone","logo","img","onSubmit","initialValues","code","placeholder","Auth","getItem","useModal","props","content","React","isValidElement","Layout","path","useRouteMatch","menu","setMenu","hideLogoutModal","logOutModal","desktopSidebar","mobileSidebar","sideMenu","link","active","startsWith","showerIcon","size","minHeight","shopName","marginTop","marginLeft","fontWeight","transform","transition","display","boxShadow","overflowX","marginBottom","textButton","hiderIcon","bottom","left","Loader","large","center","padded","show","classes","Pagination","page","count","pageSize","onSelect","current","parseInt","pagesNumber","Math","ceil","range","map","i","Table","emptyMessage","showEmptyMessage","totalCount","items","columns","renderItem","onPageChange","activePage","emptyMessageColor","space","isEmpty","readableDate","date","datetime","moment","diff","fromNow","calendar","BarbersDetail","item","onCancel","onSuccess","onUpdate","photo","href","target","city","portfolio","createdAt","updatedAt","rating","phoneCode","orderPlace","about","services","price","service","title","BarbersItem","onDelete","hideBarbersModal","showBarbersModal","Barbers","barbers","console","log","titleName","ServicesDetail","ServiceItem","App","exact","Services","locale","ReactDOM","getElementById","module","exports"],"mappings":"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","file":"static/js/main.8ac74ed7.chunk.js","sourcesContent":["/* eslint-disable jsx-a11y/accessible-emoji */\nimport React from 'react'\nimport { css, StyleSheet } from 'aphrodite'\nimport notFound from '../static/not_found.svg'\n\nexport default function NotFound() {\n    return (\n        <div className={css(styles.body)}>\n            <img src={notFound} alt=\"404\" className={css(styles.image)} />\n            <p className={css(styles.string)}>\n                Упс! Страница не найдена\n            </p>\n        </div>\n    )\n}\n\nconst styles = StyleSheet.create({\n    body: {\n        height: '100vh',\n        textAlign: 'center',\n    },\n    image: {\n        margin: '5rem auto',\n        width: '40rem',\n    },\n    string: {\n        fontSize: '3rem',\n    },\n})\n","import { StyleSheet, css } from 'aphrodite'\nimport React from 'react'\nimport cn from 'classnames'\n\nexport default function Button({ text, onClick, loading, className, icon, type = 'button', ...rest }) {\n    return (\n        <button\n            onClick={onClick}\n            type={type}\n            className={cn('button', className, { 'is-loading': loading })}\n            {...rest}>\n\n            {icon ? <span className={text ? css(styles.icon) : ''}><ion-icon name={icon} /></span> : null }\n            {text}\n        </button>\n    )\n}\n\nconst styles = StyleSheet.create({\n    icon: {\n        marginRight: '0.2rem',\n    },\n})\n","import React from 'react'\nimport { ErrorMessage } from 'formik'\n\nexport default function ValidationErrorMessage({ name, ...attributes }) {\n    return (\n        <ErrorMessage\n            name={name}\n            {...attributes}\n            render={(msg) => <div className=\"has-text-danger\">{msg}</div>} />\n    )\n}\n","import React from 'react'\nimport cn from 'classnames'\nimport { Field, useFormikContext } from 'formik'\nimport ValidationErrorMessage from './ValidationErrorMessage'\n\nexport default function Input({\n    br = false,\n    name,\n    className,\n    type,\n    label,\n    validate,\n    imgSrc,\n    component = 'input',\n    optional = false,\n    help,\n    icon,\n    ...attributes\n}) {\n    const { errors, touched } = useFormikContext()\n\n    return (\n        <div className=\"field\">\n            {label ? (\n                <label htmlFor={name}>\n                    <div className=\"columns\">\n                        {imgSrc\n                            ? <div className=\"column is-narrow\"><img src={imgSrc} width=\"50\" alt=\"alt\" /></div>\n                            : null}\n\n                        {icon ? <div className=\"column is-narrow\"><ion-icon name={icon} /></div> : null}\n\n                        <div className=\"column\">\n                            {label} &nbsp;\n                            {optional ? <span className=\"form-hint\">не обязательно</span> : null}\n                        </div>\n                    </div>\n                </label>\n            ) : null}\n\n            {br ? (<div><br /></div>) : ''}\n\n            <div className=\"control\">\n                <Field\n                    className={cn(component, className)}\n                    type={type || 'text'}\n                    name={name}\n                    id={name}\n                    component={component}\n                    validate={validate}\n                    {...attributes} />\n\n                <ValidationErrorMessage name={name} />\n            </div>\n\n            {help && (!errors[name] || !touched[name]) ? (\n                <p className=\"form-hint\">{help}</p>\n            ) : null}\n        </div>\n    )\n}\n","import React, { Fragment } from 'react'\n\nfunction ErrorItem({ field, error }) {\n    if (field === 'nonFieldErrors' || field === 'detail') {\n        return <li><strong>{error}</strong></li>\n    }\n\n    return (\n        <li>\n            <strong>{field}: </strong>\n            {error[0]}\n        </li>\n    )\n}\n\nexport default function ServerError({ error }) {\n    if (!error || !error.data) return <Fragment />\n\n    return (\n        <div className=\"message is-danger\">\n            <div className=\"message-body\">\n                <ul>\n                    {/* {typeof error.data === 'string' ? ( */}\n                    {/*    <ErrorItem field=\"detail\" error=\"unknownError\" /> */}\n                    {/* ) : Object.keys(error.data).map((key) => ( */}\n                    {/*    <ErrorItem key={key} field={key} error={error.data.message} /> */}\n                    {/* ))} */}\n                    {typeof error.data === 'string' ? (\n                        <ErrorItem field=\"detail\" error=\"unknownError\" />\n                    ) : (\n                        <ErrorItem key={error.data.message} field=\"detail\" error={error.data.message} />\n                    )}\n                </ul>\n            </div>\n        </div>\n    )\n}\n","export function auth() {\n    return {\n        headers: {\n            Authorization: `${localStorage.token}`,\n        },\n    }\n}\n\nlet permissions\n\nexport function checkPermission(permission) {\n    if (!permissions) {\n        permissions = JSON.parse(localStorage.getItem('permissions'))\n    }\n\n    return permissions.includes(permission)\n}\n\n\nexport function clearPermissions() {\n    permissions = undefined\n}\n\nexport function signin({ user, token, permissions: userPermissions }, history) {\n    localStorage.setItem('user', JSON.stringify(user))\n    localStorage.setItem('token', token)\n    localStorage.setItem('language', 'ru')\n    localStorage.setItem('permissions', JSON.stringify(userPermissions))\n    history.push('/')\n}\n\nexport function signOut(history) {\n    localStorage.removeItem('user')\n    localStorage.removeItem('token')\n    localStorage.removeItem('permissions')\n    clearPermissions()\n    history.push('/')\n}\n\nexport function isAuthenticated() {\n    return localStorage.getItem('user')\n        && localStorage.getItem('token')\n        && localStorage.getItem('permissions')\n}\n","import axios from 'axios'\nimport humps from 'humps'\nimport { domain } from '../urls'\n\n//  Add Base URL and change snake_case to camelCase\nconst baseAxios = axios.create({\n    baseURL: `${domain}`,\n    transformResponse: [\n        ...axios.defaults.transformResponse,\n        humps.camelizeKeys,\n    ],\n    transformRequest: [\n        decamelize,\n        ...axios.defaults.transformRequest,\n    ],\n})\n\nbaseAxios.interceptors.request.use((config) => ({\n    ...config,\n    params: humps.decamelizeKeys(config.params),\n}))\n\nexport default baseAxios\n\n// eslint-disable-next-line consistent-return\nfunction decamelize(object) {\n    if (!(object && !(object instanceof File))) return object\n\n    if (object instanceof FormData) {\n        const formData = new FormData()\n        // eslint-disable-next-line no-restricted-syntax\n        for (const [key, value] of object.entries()) {\n            formData.append(humps.decamelize(key), value)\n        }\n        return formData\n    }\n\n    if (typeof object === 'object') {\n        return Object.keys(object).reduce((acc, next) => ({\n            ...acc,\n            [humps.decamelize(next)]: object[next],\n        }), {})\n    }\n}\n","export const domain = 'https://barbers-dev.space'\n\nexport const AUTH = '/auth/send'\nexport const LOGIN = '/auth/confirm'\nexport const BARBERS_LIST = '/barber/filter'\nexport const SERVICES_LIST = '/service/get'\nexport const BARBERS_UPDATE = '/barber/my/edit'","import cn from 'classnames'\nimport React, { useEffect, useState } from 'react'\nimport { css, StyleSheet } from 'aphrodite'\n\nexport default function Message({ text, className, closeMessage, delay = 3 }) {\n    const [hiding, setHiding] = useState(false)\n\n    useEffect(() => {\n        const hidingTimeout = setTimeout(() => setHiding(true), delay * 1000)\n        const hideTimeout = setTimeout(closeMessage, (delay + 1) * 1000)\n\n        return () => {\n            clearTimeout(hidingTimeout)\n            clearTimeout(hideTimeout)\n        }\n    }, [closeMessage, delay])\n\n    return (\n        <article className={cn('message', className, css(styles.message), { [css(styles.hide)]: hiding })}>\n            <div className=\"message-body\">\n                <span>{text}</span> &nbsp; &nbsp;\n                <button className=\"delete is-pulled-right\" onClick={closeMessage} />\n            </div>\n        </article>\n    )\n}\n\nconst styles = StyleSheet.create({\n    message: {\n        position: 'fixed',\n        top: '60px',\n        minWidth: '20rem',\n        right: '50px',\n        animationName: {\n            from: { opacity: 0 },\n            to: { opacity: 1 },\n        },\n        animationDuration: '1s',\n        zIndex: 1000,\n    },\n    hide: {\n        animationName: {\n            from: { opacity: 1 },\n            to: { opacity: 0 },\n        },\n        animationDuration: '1s',\n    },\n})\n","import React, { useEffect } from 'react'\nimport { createPortal } from 'react-dom'\nimport cn from 'classnames'\n\nexport default function Modal({ isActive, children, onClose }) {\n    useEffect(() => {\n        const handleKeyboard = (event) => {\n            if (event.keyCode === 27) {\n                onClose()\n            }\n        }\n\n        window.addEventListener('keydown', handleKeyboard)\n\n        return () => {\n            window.removeEventListener('keydown', handleKeyboard)\n        }\n    }, [onClose])\n\n    return createPortal((\n        <div className={cn('modal', { 'is-active': isActive })}>\n            <div className=\"modal-background\" onClick={onClose} />\n\n            <div className=\"modal-card\">\n                <div className=\"modal-card-body\">\n                    {children}\n                </div>\n            </div>\n\n            <button className=\"modal-close is-large\" onClick={onClose} />\n        </div>\n    ), document.querySelector('#modals-root'))\n}\n","import React, { createContext, useState } from 'react'\nimport Message from './Message'\nimport Modal from './Modal'\n\nexport const Context = createContext()\n\nexport default function BaseContextWrapper({ children }) {\n    const [text, setText] = useState()\n    const [className, setClassName] = useState('')\n    const [modalComponent, setModalComponent] = useState()\n\n    return (\n        <Context.Provider value={{ setText, setClassName, setModalComponent }}>\n            {children}\n\n            {text ? (\n                <Message\n                    text={text}\n                    className={className}\n                    closeMessage={() => setText(null)} />\n            ) : null}\n\n            {modalComponent ? (\n                <Modal\n                    isActive\n                    onClose={() => setModalComponent(null)}>\n                    {modalComponent}\n                </Modal>\n            ) : null}\n        </Context.Provider>\n    )\n}\n","import { useContext } from 'react'\nimport { Context } from '../components/common/BaseContext'\n\nexport function useMessage() {\n    const { setText, setClassName } = useContext(Context)\n\n    return [\n        (text, className) => {\n            setText(text)\n            setClassName(className || 'is-dark')\n        },\n        () => {\n            setText(null)\n            setClassName('')\n        },\n    ]\n}\n","import { useCallback, useEffect, useRef, useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { auth, signOut } from '../utils/auth'\nimport baseAxios from '../utils/request'\nimport { useMessage } from './message'\n\n\nexport function usePostRequest(options = {}) {\n    return useRequest({ method: 'POST', ...options })\n}\n\nexport function usePutRequest(options = {}) {\n    return useRequest({ method: 'PUT', ...options })\n}\n\nexport function useGetRequest(options = {}) {\n    return useRequest({ method: 'GET', ...options })\n}\n\nexport function useDeleteRequest(options = {}) {\n    return useRequest({ method: 'DELETE', ...options })\n}\n\nexport function useRequest(options = {}) {\n    const [response, setResponse] = useState()\n    const [loading, setLoading] = useState(false)\n    const [error, setError] = useState({})\n    const [showMessage] = useMessage()\n\n    const history = useHistory()\n\n    async function request(overrideOptions = {}, sync = false) {\n        setLoading(true)\n\n        try {\n            const { data } = await baseAxios({ ...auth(), ...options, ...overrideOptions })\n            if (!sync) setResponse(data)\n            return { response: data, success: true }\n        } catch (e) {\n            setError(e.response || {})\n            if (e.response === undefined) {\n                showMessage('Проверьте интернет соединение', 'is-danger')\n            } else if (e.response.status >= 500) {\n                showMessage('Ошибка сервера.', 'is-danger')\n            } else if (e.response.status === 401 && e.response.data.logout) {\n                signOut(history)\n            }\n\n            return { error: e.response, success: false }\n        } finally {\n            if (!sync) setLoading(false)\n        }\n    }\n\n    return { loading, request, error, response, setResponse, setError, setLoading }\n}\n\nexport function useLoad(options, dependencies = []) {\n    const request = useRequest({ method: 'GET', ...options })\n\n    useEffect(() => {\n        request.request()\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, dependencies)\n\n    return request\n}\n\nexport function useInfiniteScroll(options, dependencies = []) {\n    const [page, setPage] = useState(1)\n    const items = useGetRequest({ ...options, params: { ...options.params, page } })\n    const [hasMore, setHasMore] = useState(false)\n    const observer = useRef()\n\n\n    useEffect(() => {\n        loadItems()\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [page, ...dependencies])\n\n    async function loadItems() {\n        const { response } = await items.request()\n        const oldItems = items.response ? items.response.results : []\n        const newItems = response ? response.results : []\n\n        if (!response) return\n\n        items.setResponse({ count: response ? response.count : 0, results: [...oldItems, ...newItems] })\n        setHasMore(oldItems.length + newItems.length !== response.count)\n    }\n\n    async function reload() {\n        items.setResponse({ count: 0, results: [] })\n        setPage(1)\n        await items.request({ params: { ...options.params, page: 1 } })\n    }\n\n    const ref = useCallback((node) => {\n        if (items.loading) return\n        if (observer.current) observer.current.disconnect()\n        observer.current = new IntersectionObserver((entries) => {\n            if (entries[0].isIntersecting && hasMore) {\n                setPage(page + 1)\n            }\n        })\n        if (node) observer.current.observe(node)\n    }, [hasMore, items.loading, page])\n\n    return {\n        ref, ...items, hasMore, reload,\n    }\n}\n","export function format(number) {\n    return (typeof number === 'number') ? number.toLocaleString('fr') : number\n}\n\nexport function integersOnly(value) {\n    return value.replace(/[^0-9]/gim, '')\n}\n","/* eslint-disable no-restricted-syntax */\nimport { integersOnly } from './number'\nimport { removeEmojis } from './string'\n\n/* eslint-disable consistent-return */\n\nexport function required(value) {\n    if (value === '' || value === null || value === undefined || value.length === 0) {\n        return 'Это обязательное поле'\n    }\n}\n\nexport function limitFileSize(size, file = null) {\n    // size on mb\n    return (value) => {\n        if ((file || value).size > size * 1048576) {\n            return `The maximum file size that can be uploaded is ${size}MB`\n        }\n    }\n}\n\nexport function maxNumber(limit) {\n    return (value) => {\n        if (value > limit) {\n            return `Максимальное значение ${limit}`\n        }\n    }\n}\n\nexport function minTime(startTime) {\n    return (endTime) => {\n        const valueStartTime = new Date(`2018.01.01 ${startTime}`).getTime()\n        const valueEndTime = new Date(`2018.01.01 ${endTime}`).getTime()\n        if (valueStartTime > valueEndTime) {\n            return 'Урок не может закончиться прежде чем начаться.'\n        }\n    }\n}\n\nexport function email(value) {\n    const regx = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/\n    if (!regx.test(value)) {\n        return 'Incorrect email address'\n    }\n}\n\nexport function phone(value) {\n    const integers = integersOnly(value)\n\n    if (integers.length !== 12) {\n        return 'Номер телефона должен состоять из 12 цифр'\n    }\n}\n\nfunction isNumber(value) {\n    return /^-?\\d*(\\.\\d+)?$/.test(value)\n}\n\nexport function number(value) {\n    if (!isNumber(value)) {\n        return 'This field should be number'\n    }\n}\n\nexport function max(size) {\n    return (value) => {\n        if (isNumber(value) && parseFloat(value) > size) {\n            return `This field should be less then \"${size}\"`\n        }\n    }\n}\n\nexport function maxLength(size) {\n    return (value) => {\n        if (value.length > size) {\n            return `This field should contain less then \"${size}\" chars.`\n        }\n    }\n}\n\nexport function minLength(size) {\n    return (value) => {\n        if (value.length < size) {\n            return `This field should contain more then \"${size}\" chars.`\n        }\n    }\n}\n\nexport function validator(...validators) {\n    return (value) => {\n        for (const fn of validators) {\n            const message = fn(value)\n            if (message) return message\n        }\n    }\n}\n\nexport function validateForm(rules) {\n    return (data) => {\n        const errors = {}\n        for (const key of Object.keys(rules)) {\n            const message = rules[key](data[key])\n            if (message) {\n                errors[key] = message\n            }\n        }\n        return errors\n    }\n}\n\nexport function emojiValidate(value) {\n    if (removeEmojis(value) !== value) {\n        return 'Do not insert emoji in Category name directly. Use separate emoji field'\n    }\n}\n","import { css, StyleSheet } from 'aphrodite'\nimport React from 'react'\nimport cn from 'classnames'\n\n\nexport default function LayoutAuth({ children, sidebar }) {\n    return (\n        <div className=\"login-wrapper columns is-gapless\">\n            <div className=\"column is-7\">\n                <div className=\"hero form-hero is-fullheight\">\n                    <div className={cn('hero-body', css(styles.noPadding))}>\n                        <div className={css(styles.formWrapper)}>\n                            <div className={css(styles.container)}>\n                                {children}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <div className={cn(\n                'column is-5 is-hidden-mobile hero-banner', css(styles.sidebar),\n            )}>\n                <div className=\"hero is-fullheight\">\n                    <div className=\"hero-body\">\n                        <div className=\"container has-text-centered has-text-white\">\n                            <div className=\"columns\">\n                                <div className=\"column is-10 is-offset-1\">\n                                    {sidebar}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        padding: '1.25rem',\n    },\n    noPadding: {\n        padding: '0 !important',\n    },\n    roundedButtons: {\n        '> button': {\n            borderRadius: '50%',\n        },\n    },\n    input: {\n        color: '#4a4a4a',\n    },\n    isPrimary: {\n        backgroundColor: 'rgb(31, 38, 104) !important',\n    },\n    forgotPassword: {\n        color: '#999',\n        fontSize: '.9rem',\n        ':hover': {\n            color: '#0062ff',\n        },\n    },\n    sidebar: {\n        backgroundColor: '#837c70 !important',\n    },\n    developmentSidebar: {\n        background: '#004d40',\n    },\n    stagingSidebar: {\n        background: '#000000',\n    },\n    formWrapper: {\n        maxWidth: '540px',\n        minWidth: '380px',\n        margin: '0 auto',\n    },\n})\n","import { useLocation } from 'react-router-dom'\nimport { useMemo } from 'react'\nimport queryString from 'query-string'\n\nexport function useQueryParams() {\n    const location = useLocation()\n    return useMemo(() => queryString.parse(location.search), [location.search])\n}\n","import { css, StyleSheet } from 'aphrodite'\nimport { Form, Formik } from 'formik'\nimport React from 'react'\nimport { NavLink, useHistory } from 'react-router-dom'\nimport Button from '../components/common/Button'\nimport Input from '../components/common/Input'\nimport ServerError from '../components/common/ServerError'\nimport { usePostRequest } from '../hooks/request'\nimport { AUTH, LOGIN } from '../urls'\nimport { required, validator } from '../utils/validators'\nimport { signin } from '../utils/auth'\nimport LayoutAuth from '../components/LayoutAuth'\nimport logo from '../static/logo.jpg'\nimport { useQueryParams } from '../hooks/queryString'\nimport { useMessage } from '../hooks/message'\nimport { integersOnly } from '../utils/number'\n\nexport default function Login() {\n    const history = useHistory()\n    const params = useQueryParams()\n    const [showMessage] = useMessage()\n    const login = usePostRequest({ url: LOGIN, headers: {} })\n    const auth = usePostRequest({ url: AUTH, headers: {} })\n\n    async function onSubmit(data) {\n        login.setError({})\n        const { response, success, error } = await login.request({ data })\n\n        if (error) {\n            showMessage(error.data.message, 'is-danger')\n        }\n\n        if (success) {\n            signin(response, history)\n            history.push('/barbers')\n        }\n    }\n\n    async function getCode() {\n        login.setError({})\n        const { error } = await auth.request({ data: { phone: `+${integersOnly(params.phone)}` } })\n\n        if (error) {\n            showMessage(error.data.message, 'is-danger')\n            return\n        }\n\n        showMessage('Отправлено', 'is-success')\n    }\n\n    return (\n        <LayoutAuth sidebar={(\n            <div>\n                <h2 className=\"is-size-5 has-text-weight-bold\">На номер +{params.phone} отправлен код!</h2>\n                <p>Введите код и что бы войти или зарегистривоваться</p>\n\n                <br />\n\n                <Button\n                    onClick={getCode}\n                    loading={auth.loading}\n                    className=\"button is-link is-outlined is-inverted\"\n                    text=\"Отправить ещё раз\" />\n\n                <br />\n                <br />\n\n                <NavLink to=\"\" className=\"button is-link is-outlined is-inverted\">\n                    Сменит телефон\n                </NavLink>\n            </div>\n        )}>\n\n            <div className=\"has-text-centered\">\n                <img src={logo} className={css(styles.img)} alt=\"Logo\" />\n                <h2 className=\"is-size-4 has-text-weight-bold\">Введите код</h2>\n                <br />\n            </div>\n\n            <Formik onSubmit={onSubmit} initialValues={{ phone: `+${integersOnly(params.phone)}`, code: '' }}>\n                <Form>\n                    <ServerError error={login.error} />\n                    <Input name=\"code\" validate={validator(required)} placeholder=\"Введите код\" />\n\n                    <div className=\"field\">\n                        <div className=\"control\">\n                            <Button\n                                loading={login.loading}\n                                className=\"is-primary is-blue is-medium is-fullwidth\"\n                                text=\"Подтвердить\"\n                                type=\"submit\" />\n                        </div>\n                    </div>\n                </Form>\n            </Formik>\n        </LayoutAuth>\n    )\n}\n\nconst styles = StyleSheet.create({\n    img: {\n        width: '10rem',\n    },\n})\n","import { css, StyleSheet } from 'aphrodite'\nimport { Form, Formik } from 'formik'\nimport React from 'react'\nimport { Redirect, useHistory } from 'react-router-dom'\nimport Button from '../components/common/Button'\nimport Input from '../components/common/Input'\nimport ServerError from '../components/common/ServerError'\nimport { usePostRequest } from '../hooks/request'\nimport { AUTH } from '../urls'\nimport { required, validator } from '../utils/validators'\nimport { isAuthenticated } from '../utils/auth'\nimport LayoutAuth from '../components/LayoutAuth'\nimport logo from '../static/logo.jpg'\nimport { useMessage } from '../hooks/message'\nimport { integersOnly } from '../utils/number'\n\nexport default function Auth() {\n    const history = useHistory()\n    const [showMessage] = useMessage()\n    const auth = usePostRequest({ url: AUTH, headers: {} })\n\n    if (isAuthenticated()) {\n        return <Redirect to=\"/barbers\" />\n    }\n\n    async function onSubmit(data) {\n        auth.setError({})\n        const { success, error } = await auth.request({ data: { phone: `+${integersOnly(data.phone)}` } })\n\n        if (success) {\n            history.push(`/login?phone=${integersOnly(data.phone)}`)\n            return\n        }\n\n        showMessage(error.data.message, 'is-danger')\n    }\n\n    return (\n        <LayoutAuth sidebar={(\n            <div>\n                <h2 className=\"is-size-5 has-text-weight-bold\">Как войти или зарегистривоваться?</h2>\n                <p>Введите телефон номер и нажмите на кнопку получить код</p>\n            </div>\n        )}>\n\n            <div className=\"has-text-centered\">\n                <img src={logo} className={css(styles.img)} alt=\"Logo\" />\n                <h2 className=\"is-size-4 has-text-weight-bold\">Войдите в систему</h2>\n                <br />\n            </div>\n\n            <Formik onSubmit={onSubmit} initialValues={{ phone: '' }}>\n                <Form>\n                    <ServerError error={auth.error} />\n                    <Input name=\"phone\" validate={validator(required)} placeholder=\"Введите телефон\" />\n\n                    <div className=\"field\">\n                        <div className=\"control\">\n                            <Button\n                                loading={auth.loading}\n                                className=\"is-primary is-blue is-medium is-fullwidth\"\n                                text=\"Получить код\"\n                                type=\"submit\" />\n                        </div>\n                    </div>\n                </Form>\n            </Formik>\n        </LayoutAuth>\n    )\n}\n\nconst styles = StyleSheet.create({\n    img: {\n        width: '10rem',\n    },\n})\n","import React, { useContext } from 'react'\nimport { Context } from '../components/common/BaseContext'\n\nexport function useModal(component) {\n    const { setModalComponent } = useContext(Context)\n\n    function showModal(props) {\n        const content = React.isValidElement(component) ? component : component(props)\n        setModalComponent(content)\n    }\n\n    function hideModal() {\n        setModalComponent(null)\n    }\n\n    return [showModal, hideModal]\n}\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport { css, StyleSheet } from 'aphrodite'\nimport cn from 'classnames'\nimport { NavLink, useHistory, useRouteMatch } from 'react-router-dom'\nimport React, { useState } from 'react'\nimport logo from '../static/logo.jpg'\nimport { signOut } from '../utils/auth'\nimport { useModal } from '../hooks/modal'\nimport Button from './common/Button'\n\nexport default function Layout({ children, padding = true, className }) {\n    const { path } = useRouteMatch()\n    const history = useHistory()\n    const [menu, setMenu] = useState(false)\n\n    const [logOutModal, hideLogoutModal] = useModal(\n        <div>\n            <h1 className=\"is-size-5\">\n                Потдверждение выхода\n            </h1><br />\n\n            <Button\n                text=\"Отмена\"\n                icon=\"close\"\n                onClick={() => hideLogoutModal()} />&nbsp;\n\n            <Button\n                className=\"is-info\"\n                text=\"Выйти\"\n                icon=\"log-out-outline\"\n                onClick={() => {\n                    signOut(history)\n                    hideLogoutModal()\n                }} />\n        </div>,\n    )\n\n    return (\n        <div>\n            <div className={css(styles.sidebar,\n                menu ? styles.desktopSidebar : styles.mobileSidebar)}>\n                <img src={logo} alt=\"logo\" className={css(styles.logo)} />\n\n                <ul className={css(styles.sideMenu)}>\n                    <NavLink to=\"/barbers\">\n                        <li className={cn('columns is-mobile is-gapless', css(styles.link),\n                            { [css(styles.active)]: path.startsWith('/barbers') })}>\n                            <span className={cn('column is-narrow', css(styles.icon))}>\n                                <ion-icon name=\"cart-outline\" />\n                            </span>\n\n                            <span className={cn('column is-narrow', css(styles.text))}>\n                                Barbers\n                            </span>\n                        </li>\n                    </NavLink>\n\n                    <NavLink to=\"/user\">\n                        <li className={cn('columns is-mobile is-gapless', css(styles.link),\n                            { [css(styles.active)]: path.startsWith('/user') })}>\n                            <span className={cn('column is-narrow', css(styles.icon))}>\n                                <ion-icon name=\"megaphone-outline\" />\n                            </span>\n\n                            <span className={cn('column is-narrow', css(styles.text))}>\n                                Пользователь\n                            </span>\n                        </li>\n                    </NavLink>\n\n                    <NavLink to=\"/services\">\n                        <li className={cn('columns is-mobile is-gapless', css(styles.link),\n                            { [css(styles.active)]: path.startsWith('/services') })}>\n                            <span className={cn('column is-narrow', css(styles.icon))}>\n                                <ion-icon name=\"chatbubble-ellipses-outline\" />\n                            </span>\n\n                            <span className={cn('column is-narrow', css(styles.text))}>\n                                Сервисы\n                            </span>\n                        </li>\n                    </NavLink>\n\n                    <a onClick={logOutModal}>\n                        <li className={cn('columns is-mobile is-gapless', css(styles.link))}>\n                            <span className={cn('column is-narrow', css(styles.icon))}>\n                                <ion-icon name=\"log-out-outline\" />\n                            </span>\n\n                            <span className={cn('column is-narrow', css(styles.text))}>\n                                Выйти\n                            </span>\n                        </li>\n                    </a>\n                </ul>\n            </div>\n\n            <div className={cn(css(styles.container))}>\n                <div className={cn(className, css(styles.content), { [css(styles.padding)]: padding })}>\n                    <span onClick={() => setMenu(true)} className={css(styles.showerIcon)}>\n                        <ion-icon size=\"large\" name=\"menu-outline\" />\n                    </span>\n                    {children}\n                </div>\n            </div>\n\n            <div className={css(menu ? styles.background : null)} onClick={() => setMenu(false)} />\n        </div>\n    )\n}\n\nconst styles = StyleSheet.create({\n    content: {\n        minHeight: '100vh',\n        background: '#f2f6f7',\n    },\n    shopName: {\n        position: 'absolute',\n        marginTop: '2.8rem',\n        marginLeft: '2rem',\n        fontWeight: '400',\n    },\n    desktopSidebar: {\n        '@media (max-width: 769px)': {\n            transform: 'translateX(0)',\n            transition: 'all 300ms',\n        },\n    },\n    mobileSidebar: {\n        '@media (max-width: 769px)': {\n            transform: 'translateX(-14rem)',\n            transition: 'all 300ms',\n        },\n    },\n    showerIcon: {\n        '@media (min-width: 769px)': {\n            display: 'none',\n        },\n    },\n    sidebar: {\n        minHeight: '100%',\n        position: 'fixed',\n        width: '14.1rem',\n        margin: '0',\n        zIndex: '5',\n        boxShadow: '0 0.5em 1em rgba(10, 10, 10, 0.1)',\n        '::-webkit-scrollbar': {\n            display: 'none',\n        },\n        '@media (max-height: 900px)': {\n            height: 'calc(100vh - 100%)',\n            background: 'white',\n            overflowX: 'scroll',\n        },\n    },\n    sideMenu: {\n        marginTop: '3.3rem',\n        marginLeft: '0rem',\n    },\n    padding: {\n        padding: '1.8rem',\n    },\n    link: {\n        color: 'rgba(0, 0, 0, 0.5)',\n        fontWeight: '400',\n        marginBottom: '1rem',\n    },\n    icon: {\n        margin: '0rem 1rem 0rem 2rem',\n    },\n    container: {\n        margin: '0 0 0 14rem',\n        '@media (max-width: 769px)': {\n            margin: '0',\n        },\n    },\n    logo: {\n        marginTop: '6rem',\n        marginLeft: '2.1rem',\n        width: '8rem',\n    },\n    active: {\n        fontWeight: '600',\n        color: '#53a4c1',\n        boxShadow: 'inset 4px 0px #53a4c1',\n    },\n    textButton: {\n        background: 'gray',\n    },\n    hiderIcon: {\n        transform: 'translate(9.6rem, -15rem)',\n        color: 'white',\n        '@media (min-width: 769px)': {\n            display: 'none',\n        },\n    },\n    text: {\n        marginTop: '3px',\n    },\n    background: {\n        '@media (max-width: 769px)': {\n            bottom: 0,\n            left: 0,\n            position: 'fixed',\n            right: 0,\n            top: 0,\n            background: 'RGBA(0, 0, 0, .5)',\n            zIndex: 4,\n        },\n    },\n})\n","import React from 'react'\nimport { StyleSheet, css } from 'aphrodite'\nimport cn from 'classnames'\n\nexport default function Loader({ large, center, className, padded = false, show = true }) {\n    const classes = cn(className, 'loader', {\n        'is-size-1': large,\n        [css(styles.center)]: center,\n        [css(styles.padded)]: padded,\n    })\n    return show ? <span className={classes} /> : null\n}\n\nconst styles = StyleSheet.create({\n    center: { margin: '0 auto' },\n    padded: { marginTop: '2rem', marginBottom: '2rem' },\n})\n","import React from 'react'\nimport range from 'lodash/range'\nimport cn from 'classnames'\n\nexport default function Pagination({ page = 1, count, pageSize = 15, onSelect }) {\n    const current = parseInt(page, 10)\n    const pagesNumber = Math.ceil(count / pageSize)\n\n    if (count <= pageSize || count === undefined) {\n        return null\n    }\n\n    return (\n        <nav className=\"pagination columns is-mobile is-centered\">\n            {current - 1 > 0 ? (\n                <span\n                    onClick={() => onSelect(current - 1)}\n                    className=\"pagination-previous is-narrow column is-mobile pointer\">\n                    &larr;&nbsp; Переведушый\n                </span>\n            ) : null}\n\n            {current < pagesNumber ? (\n                <span onClick={() => onSelect(current + 1)} className=\"pagination-next is-narrow column pointer\">\n                    Следуюший\n                </span>\n            ) : null}\n\n            <ul className=\"pagination-list\">\n                {range(1, pagesNumber + 1).map((i) => (\n                    <li key={i} onClick={() => onSelect(i)} className=\"pointer\">\n                        <span className={cn('pagination-link', { 'is-current': current === i })}>\n                            {i}\n                        </span>\n                    </li>\n                ))}\n            </ul>\n        </nav>\n    )\n}\n","import { css, StyleSheet } from 'aphrodite'\nimport cn from 'classnames'\nimport queryString from 'query-string'\nimport isEmpty from 'lodash/isEmpty'\nimport React from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { useQueryParams } from '../../hooks/queryString'\n\nimport Loader from './Loader'\nimport Pagination from './Pagination'\n\nexport default function Table({\n    loading = false,\n    emptyMessage = 'Пусто',\n    showEmptyMessage = true,\n    totalCount,\n    pageSize = 15,\n    items,\n    columns,\n    renderItem,\n    onPageChange,\n    activePage,\n    emptyMessageColor = null,\n}) {\n    const history = useHistory()\n    const params = useQueryParams()\n\n    if (loading) {\n        return (\n            <div className={css(styles.space)}>\n                <Loader large center />\n            </div>\n        )\n    }\n\n    if (isEmpty(items) && showEmptyMessage) {\n        const className = cn(\n            emptyMessageColor || 'has-text-grey',\n            'is-size-5 has-text-centered',\n            css(styles.space),\n        )\n        return (\n            <div\n                className={className}>\n                {emptyMessage}\n            </div>\n        )\n    }\n\n    return (\n        <div>\n            <table className=\"table is-striped is-fullwidth\">\n                <tbody>\n                    {columns ? (\n                        <tr>\n                            {Object.entries(columns).map(([key, value]) => (\n                                <th key={key}>{value}</th>\n                            ))}\n                        </tr>\n                    ) : null}\n\n                    {items.map(renderItem)}\n                </tbody>\n            </table>\n\n            <Pagination\n                page={activePage || params.page}\n                onSelect={(page) => {\n                    if (typeof onPageChange === 'function') {\n                        onPageChange(page)\n                        return\n                    }\n                    history.push(`?${queryString.stringify({ ...params, page })}`)\n                }}\n                count={totalCount}\n                pageSize={pageSize} />\n        </div>\n    )\n}\n\n\nconst styles = StyleSheet.create({\n    space: {\n        marginTop: '2rem',\n    },\n})\n","import moment from 'moment'\nimport filter from 'lodash/filter'\n\nexport const DATE_FORMAT = 'DD-MM-YYYY'\nexport const DATE_AUTO_FORMAT = 'YYYY-MM-DD'\nexport const DATETIME_FORMAT = 'HH:mm DD.MM.YYYY'\n\nexport const DAYS = [\n    { key: 'monday', title: 'Понедельник', shortTitle: 'Пн' },\n    { key: 'tuesday', title: 'Вторник', shortTitle: 'Вт' },\n    { key: 'wednesday', title: 'Среда', shortTitle: 'Ср' },\n    { key: 'thursday', title: 'Четверг', shortTitle: 'Чт' },\n    { key: 'friday', title: 'Пятница', shortTitle: 'Пт' },\n    { key: 'saturday', title: 'Суббота', shortTitle: 'Сб' },\n    { key: 'sunday', title: 'Воскресенье', shortTitle: 'Вс' },\n]\n\nexport function day(dayKey) {\n    return filter(DAYS, { key: dayKey })[0]\n}\n\nexport function getMonth(date = new Date(), withYear = false) {\n    const format = withYear ? 'MMMM YYYY' : 'MMMM'\n    const month = moment(date).format(format)\n    return (month)[0].toUpperCase() + (month).slice(1)\n}\n\nexport function getDay(date = new Date(), withYear = false) {\n    const format = withYear ? 'DD MMMM YYYY' : 'DD'\n    const days = moment(date).format(format)\n    return (days)[0].toUpperCase() + (days).slice(1)\n}\n\nexport function getDateTime(date = new Date()) {\n    return moment(date).format(DATETIME_FORMAT)\n}\n\nexport function getDate(date = new Date()) {\n    return moment(date).format(DATE_FORMAT)\n}\n\nexport function getDateOtherFormat(date = new Date()) {\n    return moment(date).format(DATE_AUTO_FORMAT)\n}\n\nexport function readableDate(date) {\n    const datetime = moment(date)\n    const diff = moment().diff(datetime, 'days')\n    if (diff < 1) {\n        return datetime.fromNow()\n    }\n    return datetime.calendar()\n}\n","import React from 'react'\nimport Button from './common/Button'\nimport { readableDate } from '../utils/date'\nimport Table from './common/Table'\n\n\nexport default function BarbersDetail({ item, onCancel, onSuccess, onUpdate }) {\n    return (\n        <div>\n            <div className=\"columns\">\n                <div className=\"column is-narrow\">\n                    {item.user.photo ? (\n                        // eslint-disable-next-line react/jsx-no-target-blank\n                        <a href={item.user.photo} target=\"_blank\" className=\"has-text-black\">\n                            Фото\n                            <img className=\"image is-128x128\" src={item.user.photo} alt=\"alt\" />\n                        </a>\n                    ) : (\n                        <img className=\"image is-128x128\" alt=\"alt\" />\n                    )}\n                </div>\n\n                <div className=\"column\">\n                    <table className=\"table is-striped is-fullwidth\">\n                        <tbody>\n                            <tr>\n                                <td className=\"is-size-5\">Ползователь</td>\n                                <td className=\"is-size-5\" />\n                            </tr>\n\n                            <tr>\n                                <td>Имя: </td>\n                                <td><b>{item.user.name}</b></td>\n                            </tr>\n\n                            <tr>\n                                <td>Телефон:</td>\n                                <td>{item.user.phone}</td>\n                            </tr>\n\n                            <tr>\n                                <td>Город:</td>\n                                <td>{item.user.city.name}</td>\n                            </tr>\n\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n            <hr />\n\n            <div className=\"columns\">\n                <div className=\"column is-narrow\">\n                    {item.portfolio[0] ? (\n                        // eslint-disable-next-line react/jsx-no-target-blank\n                        <a href={item.portfolio[0]} target=\"_blank\" className=\"has-text-black\">\n                            Фото\n                            <img className=\"image is-128x128\" src={item.portfolio[0]} alt=\"alt\" />\n                        </a>\n                    ) : (\n                        <img className=\"image is-128x128\" alt=\"alt\" />\n                    )}\n                </div>\n\n                <div className=\"column\">\n                    <table className=\"table is-striped is-fullwidth\">\n                        <tbody>\n                            <tr>\n                                <td className=\"is-size-5\">Барбер</td>\n                                <td className=\"is-size-5\" />\n                            </tr>\n\n                            <tr>\n                                <td>Дата создание: </td>\n                                <td><b>{readableDate(item.createdAt)}</b></td>\n                            </tr>\n\n                            <tr>\n                                <td>Последное изменение:</td>\n                                <td>{readableDate(item.updatedAt)}</td>\n                            </tr>\n\n                            <tr>\n                                <td>Активно:</td>\n                                <td>{item.isActive ? 'Да' : 'Нет'}</td>\n                            </tr>\n\n                            <tr>\n                                <td>Рейтинг:</td>\n                                <td>{item.rating}</td>\n                            </tr>\n\n                            <tr>\n                                <td>Код телефона:</td>\n                                <td>{item.phoneCode}</td>\n                            </tr>\n\n                            <tr>\n                                <td>Места:</td>\n                                <td>\n                                    {item.orderPlace.map((orderPlace) => <div key={orderPlace}>{orderPlace}</div>)}\n                                </td>\n                            </tr>\n\n                            <tr>\n                                <td>Описание:</td>\n                                <td>{item.about}</td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n            <hr />\n\n            <h1 className=\"is-size-4\">Услуги</h1>\n\n            <Table\n                items={item.services ? item.services : []}\n                columns={{ name: 'Название', price: 'Цена' }}\n                renderItem={(service) => (\n                    <tr key={service.id}>\n                        <td>{service.title}</td>\n                        <td>{service.price}</td>\n                    </tr>\n                )} /><br />\n\n            <Button\n                text=\"Изменить\"\n                icon=\"pencil-outline\"\n                //onClick={updateProductModal}\n                className=\"is-link is-pulled-right ml-1\" /> &nbsp;\n\n            <Button\n                text=\"Закрыть\"\n                icon=\"close-outline\"\n                onClick={onCancel}\n                className=\"is-danger is-pulled-right\" /> &nbsp;\n        </div>\n    )\n}\n","/* eslint-disable no-nested-ternary */\nimport React from 'react'\nimport { readableDate } from '../utils/date'\nimport Button from './common/Button'\nimport { useModal } from '../hooks/modal'\nimport BarbersDetail from './BarbersDetail'\n\n\nexport default function BarbersItem({ item, onDelete, onUpdate }) {\n\n    const [showBarbersModal, hideBarbersModal] = useModal(\n        <BarbersDetail\n            onUpdate={onUpdate}\n            item={item}\n            onCancel={() => hideBarbersModal()} />,\n    )\n\n\n    return (\n        <tr>\n            <td className=\"pointer\" onClick={showBarbersModal}>\n                {item.user.name}\n            </td>\n\n            <td className=\"pointer\" onClick={showBarbersModal}>\n                {item.user.phone}\n            </td>\n\n            <td className=\"pointer\" onClick={showBarbersModal}>\n                {item.about}\n            </td>\n\n            <td className=\"pointer\" onClick={showBarbersModal}>\n                {readableDate(item.createdAt)}\n            </td>\n\n            <td className=\"pointer\" onClick={showBarbersModal}>\n                {readableDate(item.updatedAt)}\n            </td>\n\n            <td className=\"has-text-right\">\n                <Button className=\"pointer is-white\" icon=\"trash-outline\" />\n                <Button className=\"pointer is-white\" icon=\"create-outline\" />\n            </td>\n        </tr>\n    )\n}\n","import React, { useEffect } from 'react'\nimport { css, StyleSheet } from 'aphrodite'\nimport cn from 'classnames'\nimport Layout from '../components/Layout'\nimport { BARBERS_LIST } from '../urls'\nimport { usePostRequest } from '../hooks/request'\nimport Button from '../components/common/Button'\nimport Table from '../components/common/Table'\nimport BarbersItem from '../components/BarbersItem'\n\n\nexport default function Barbers() {\n    const barbers = usePostRequest({ url: BARBERS_LIST })\n\n    useEffect(() => {\n        barbers.request()\n        // eslint-disable-next-line\n    }, [])\n    console.log(barbers)\n\n    return (\n        <Layout>\n            <div className=\"columns is-mobile\">\n\n                <div className=\"column\">\n                    <h1 className={cn(css(styles.titleName))}>\n                        Барберы\n                    </h1>\n                </div>\n\n                <div className=\"column\">\n                    <Button\n                        text=\"Создать\"\n                        icon=\"add-outline\"\n                        // onClick={createCategoryModal}\n                        className=\"is-link is-outlined is-pulled-right\" />\n                </div>\n            </div>\n\n            <div className=\"box\">\n                <Table\n                    emptyMessage=\"Нет барберов\"\n                    loading={barbers.loading}\n                    items={barbers.response ? barbers.response : []}\n                    columns={{\n                        name: 'Имя пользователя',\n                        phone: 'Телефон',\n                        about: 'Описание',\n                        createdAt: 'Дата создание',\n                        updatedAt: 'Последное изменение',\n                        active: '',\n                    }}\n                    renderItem={(item) => (\n                        <BarbersItem\n                            key={item.id}\n                            onUpdate={barbers.request}\n                            onDelete={barbers.request}\n                            item={item} />\n                    )} />\n            </div>\n        </Layout>\n    )\n}\n\nconst styles = StyleSheet.create({\n    titleName: {\n        fontWeight: '500',\n    },\n})\n","import React from 'react'\nimport Button from './common/Button'\nimport { readableDate } from '../utils/date'\nimport Table from './common/Table'\n\n\nexport default function ServicesDetail({ item, onCancel, onSuccess, onUpdate }) {\n\n\n    return (\n        <div>\n            <div className=\"columns\">\n                <div className=\"column is-narrow\">\n                    {item.title}\n                </div>\n\n                <div className=\"column\">\n                    <table className=\"table is-striped is-fullwidth\">\n                        <tbody>\n                            <tr>\n                                <td className=\"is-size-5\">Ползователь</td>\n                                <td className=\"is-size-5\" />\n                            </tr>\n\n                            <tr>\n                                <td>Имя: </td>\n                                <td><b>{item.user.name}</b></td>\n                            </tr>\n\n                            <tr>\n                                <td>Телефон:</td>\n                                <td>{item.user.phone}</td>\n                            </tr>\n\n                            <tr>\n                                <td>Город:</td>\n                                <td>{item.user.city.name}</td>\n                            </tr>\n\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n            <hr />\n\n            <div className=\"columns\">\n                <div className=\"column is-narrow\">\n                    {item.portfolio[0] ? (\n                        // eslint-disable-next-line react/jsx-no-target-blank\n                        <a href={item.portfolio[0]} target=\"_blank\" className=\"has-text-black\">\n                            Фото\n                            <img className=\"image is-128x128\" src={item.portfolio[0]} alt=\"alt\" />\n                        </a>\n                    ) : (\n                        <img className=\"image is-128x128\" alt=\"alt\" />\n                    )}\n                </div>\n\n                <div className=\"column\">\n                    <table className=\"table is-striped is-fullwidth\">\n                        <tbody>\n                            <tr>\n                                <td className=\"is-size-5\">Барбер</td>\n                                <td className=\"is-size-5\" />\n                            </tr>\n\n                            <tr>\n                                <td>Дата создание: </td>\n                                <td><b>{readableDate(item.createdAt)}</b></td>\n                            </tr>\n\n                            <tr>\n                                <td>Последное изменение:</td>\n                                <td>{readableDate(item.updatedAt)}</td>\n                            </tr>\n\n                            <tr>\n                                <td>Активно:</td>\n                                <td>{item.isActive ? 'Да' : 'Нет'}</td>\n                            </tr>\n\n                            <tr>\n                                <td>Рейтинг:</td>\n                                <td>{item.rating}</td>\n                            </tr>\n\n                            <tr>\n                                <td>Код телефона:</td>\n                                <td>{item.phoneCode}</td>\n                            </tr>\n\n                            <tr>\n                                <td>Места:</td>\n                                <td>\n                                    {item.orderPlace.map((orderPlace) => <div key={orderPlace}>{orderPlace}</div>)}\n                                </td>\n                            </tr>\n\n                            <tr>\n                                <td>Описание:</td>\n                                <td>{item.about}</td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n            <hr />\n\n            <h1 className=\"is-size-4\">Услуги</h1>\n\n            <Table\n                items={item.services ? item.services : []}\n                columns={{ name: 'Название', price: 'Цена' }}\n                renderItem={(service) => (\n                    <tr key={service.id}>\n                        <td>{service.title}</td>\n                        <td>{service.price}</td>\n                    </tr>\n                )} /><br />\n\n            <Button\n                text=\"Изменить\"\n                icon=\"pencil-outline\"\n                className=\"is-link is-pulled-right ml-1\" /> &nbsp;\n\n            <Button\n                text=\"Закрыть\"\n                icon=\"close-outline\"\n                onClick={onCancel}\n                className=\"is-danger is-pulled-right\" /> &nbsp;\n        </div>\n    )\n}\n","/* eslint-disable no-nested-ternary */\nimport React from 'react'\nimport { readableDate } from '../utils/date'\nimport Button from './common/Button'\nimport { useModal } from '../hooks/modal'\nimport ServicesDetail from './ServicesDetail'\n\n\nexport default function ServiceItem({ item, onDelete, onUpdate }) {\n\n    const [showBarbersModal, hideBarbersModal] = useModal(\n        <ServicesDetail\n            onUpdate={onUpdate}\n            item={item}\n            onCancel={() => hideBarbersModal()} />,\n    )\n\n\n    return (\n        <tr>\n            <td className=\"pointer\">\n                {item.title}\n            </td>\n\n            <td className=\"pointer\">\n                {readableDate(item.createdAt)}\n            </td>\n\n            <td className=\"pointer\">\n                {readableDate(item.updatedAt)}\n            </td>\n\n            <td className=\"has-text-right\">\n                <Button className=\"pointer is-white\" icon=\"trash-outline\" />\n                <Button className=\"pointer is-white\" icon=\"create-outline\" />\n            </td>\n        </tr>\n    )\n}\n","import React, { useEffect } from 'react'\nimport { css, StyleSheet } from 'aphrodite'\nimport cn from 'classnames'\nimport Layout from '../components/Layout'\nimport { SERVICES_LIST } from '../urls'\nimport { useGetRequest } from '../hooks/request'\nimport Button from '../components/common/Button'\nimport Table from '../components/common/Table'\nimport ServicesItem from '../components/ServicesItem'\n\n\nexport default function Barbers() {\n    const services = useGetRequest({ url: SERVICES_LIST })\n\n    useEffect(() => {\n        services.request()\n        // eslint-disable-next-line\n    }, [])\n\n    return (\n        <Layout>\n            <div className=\"columns is-mobile\">\n\n                <div className=\"column\">\n                    <h1 className={cn(css(styles.titleName))}>\n                        Услуги\n                    </h1>\n                </div>\n\n                <div className=\"column\">\n                    <Button\n                        text=\"Создать\"\n                        icon=\"add-outline\"\n                        // onClick={createCategoryModal}\n                        className=\"is-link is-outlined is-pulled-right\" />\n                </div>\n            </div>\n\n            <div className=\"box\">\n                <Table\n                    emptyMessage=\"Нет услуг\"\n                    loading={services.loading}\n                    items={services.response ? services.response : []}\n                    columns={{\n                        title: 'Название услуги',\n                        createdAt: 'Дата создание',\n                        updatedAt: 'Последное изменение',\n                        active: '',\n                    }}\n                    renderItem={(item) => (\n                        <ServicesItem\n                            key={item.id}\n                            onUpdate={services.request}\n                            onDelete={services.request}\n                            item={item} />\n                    )} />\n            </div>\n        </Layout>\n    )\n}\n\nconst styles = StyleSheet.create({\n    titleName: {\n        fontWeight: '500',\n    },\n})\n","import React from 'react'\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\n\nimport NotFound from './pages/NotFound'\nimport Login from './pages/Login'\nimport BaseContextWrapper from './components/common/BaseContext'\nimport Auth from './pages/Auth'\nimport Barbers from './pages/Barbers'\nimport Services from './pages/Services'\n\nexport default function App() {\n    return (\n        <BrowserRouter >\n            <BaseContextWrapper>\n                <Switch>\n                    <Route path=\"/\" name=\"auth\" component={Auth} exact />\n                    <Route path=\"/login\" name=\"login\" component={Login} exact />\n                    <Route path=\"/barbers\" name=\"barbers\" component={Barbers} exact />\n                    <Route path=\"/services\" name=\"services\" component={Services} exact />\n                    <Route path=\"\" component={NotFound} exact />\n                </Switch>\n            </BaseContextWrapper>\n        </BrowserRouter>\n    )\n}\n","import 'bulma/css/bulma.css'\nimport './static/styles.css'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport moment from 'moment'\nimport App from './Router'\nimport 'moment/locale/ru'\n\nmoment.locale('ru')\n\nReactDOM.render(<App />, document.getElementById('root'))\n","module.exports = __webpack_public_path__ + \"static/media/logo.e9b7d999.jpg\";","module.exports = __webpack_public_path__ + \"static/media/not_found.6695af99.svg\";"],"sourceRoot":""}